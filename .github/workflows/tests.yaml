name: Code checks and testing

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write   # allows pushing badge

jobs:
  check_and_test:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Attempt to pull testbed image for building speedup
        run: |
          docker pull ghcr.io/remimikalsen/python-testbed:v1 || echo "Cached image not found; will build a new one."

      - name: Build testbed docker image from cache
        run: |
          docker build \
            --cache-from ghcr.io/remimikalsen/python-testbed:v1 \
            -t ghcr.io/remimikalsen/python-testbed:v1 \
            -f tests-docker/Dockerfile.testbed .

      - name: Build test docker image
        run: |
          docker build -t sharepass-tests -f tests-docker/Dockerfile.tests .

      - name: Run linter
        run: |
          docker run --rm sharepass-tests lint

      - name: Run unit tests and capture test coverage output
        id: run_tests
        run: |
          # Run the container and capture the full output
          OUTPUT=$(docker run --rm sharepass-tests test-unit)
          echo "$OUTPUT" > docker_output.txt

          # Extract and print the pytest output
          PYTEST_OUTPUT=$(awk '/-----BEGIN PYTEST OUTPUT-----/{flag=1; next} /-----END PYTEST OUTPUT-----/{flag=0} flag' docker_output.txt)
          echo "-----BEGIN PYTEST OUTPUT-----"
          echo "$PYTEST_OUTPUT"
          echo "-----END PYTEST OUTPUT-----"

          # Extract the badge SVG and store it as tests/coverage-badge.svg
          awk '/-----BEGIN BADGE SVG-----/{flag=1; next} /-----END BADGE SVG-----/{flag=0} flag' docker_output.txt > coverage-badge.svg

          # Extract the coverage XML and store it as tests/coverage.xml
          awk '/-----BEGIN COVERAGE XML-----/{flag=1; next} /-----END COVERAGE XML-----/{flag=0} flag' docker_output.txt > coverage.xml

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ github.event.pull_request.number }}
          path: |
            coverage-badge.svg
            coverage.xml
          retention-days: 30 

      - name: Run E2E tests
        run: |
          docker run --rm sharepass-tests test-e2e
